1. Spring Boot Internals:

In spring boot starters we do have 'spring.factories' in each of the jar. This file contains list of beans related to that particular jar. In each of 
those class files, we have annotations for conditional beans loading.

Example:
@Configuration
@ConditionalOnBean(DataSource.class)
@ConditionalOnClass(JpaRepository.class)
@ConditionalOnMissingBean({ JpaRepositoryFactoryBean.class,
		JpaRepositoryConfigExtension.class })
@ConditionalOnProperty(prefix = "spring.data.jpa.repositories", name = "enabled", havingValue = "true", matchIfMissing = true)
@Import(JpaRepositoriesAutoConfigureRegistrar.class)
@AutoConfigureAfter(HibernateJpaAutoConfiguration.class)
public class JpaRepositoriesAutoConfiguration {
}
https://www.youtube.com/watch?v=qlygg_H1M20&ab_channel=JavaTechie

**********************

2. How to exclude few classes not to auto configure in Spring Boot.

a) using @EnableAutoConfiguration 

@Configuration
@EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})
public class MyConfiguration {
}

b) in application.yml

spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration
      
**********************
